version: "3.8"
networks:
    app-network:
        driver: bridge
  
services:
    poggers-sql:
        image: postgres:14.1-alpine
        restart: always
        env_file:
            - .env
        ports:
            - '${POSTGRES_PORT}:${POSTGRES_PORT}'
        volumes: 
            - poggers-sql-data:/var/lib/postgresql/data
        hostname: "${POSTGRES_HOSTNAME}"
    load-balancer:
        image: haproxy:2.3
        restart: always
        env_file:
            - .env
        ports:
            - "${LOAD_BALANCER_PORT}:${LOAD_BALANCER_PORT}"
        volumes:
            - ./haproxy:/usr/local/etc/haproxy
        deploy:
            resources:
                limits:
                    memory: 500M
        container_name: Haproxy-LOAD-BALANCER
    rabbitmq3:
        container_name: "kroliczek"
        image: rabbitmq:3.8-management-alpine
        env_file:
            - .env
        ports:
            # AMQP protocol port
            - '${BUNNY_CONNECTION_PORT}:${BUNNY_CONNECTION_PORT}'
            # HTTP management UI
            - '15672:15672'
        hostname: ${BUNNY_HOSTNAME}
        depends_on:
            - load-balancer
    nest-main-server:
        container_name: main-server
        image: dockerfiles/main-server/dockerfile
        hostname: "${MAIN_SERVER_HOSTNAME}"
        restart: on-failure:3
        env_file: 
            - .env
            - dockerfiles/main-server/.env
        build:
            context: ../
            dockerfile: docker/dockerfiles/main-server/dockerfile
        volumes:
            - "../server/main-server/src:/server/main-server/src"
        depends_on:
            - load-balancer
            - poggers-sql
    auth-service:
        container_name: auth-server
        image: dockerfiles/auth-service/dockerfile
        hostname: "${AUTH_SERVER_HOSTNAME}"
        restart: on-failure:3
        env_file: 
            - dockerfiles/auth-service/.env
            - .env
        build:
            context: ../
            dockerfile: docker/dockerfiles/auth-service/dockerfile
        volumes:
            - "../server/auth-service/src:/server/auth-service/src"
        depends_on:
            - rabbitmq3
            - poggers-sql
    pgadmin:
        image: dpage/pgadmin4
        container_name: pg-admin
        env_file:
            - .env
        restart: always
        ports:
            - "${PGADMIN_PORT}:80"
        volumes:
            - pgadmin-data:/var/lib/pgadmin 
        hostname: "${PGADMIN_HOST_NAME}"
        depends_on:
            - poggers-sql
        entrypoint: 
            - "/bin/echo '$${POSTGRES_HOST}:$${POSTGRES_PORT}:$${POSTGRES_DATABASE_NAME}:$${POSTGRES_USER}:$${POSTGRES_PASSWORD}' > /pgpassfile && chmod 600 /pgpassfile && /entrypoint.sh"

               
volumes:
    files:
    nest-main-server:
    auth-service:
    poggers-sql-data:
    pgadmin-data:

